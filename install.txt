{
    "created_by": "Tampermonkey",
    "version": "1",
    "scripts": [
        {
            "name": "Oliv-Speed-Up",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compatopts_for_requires": true,
                "compat_wrappedjsobject": false,
                "compat_metadata": false,
                "compat_foreach": false,
                "compat_arrayleft": false,
                "compat_uW_gmonkey": false,
                "compat_forvarin": false,
                "noframes": null,
                "awareOfChrome": false,
                "run_at": null,
                "override": {
                    "use_includes": [],
                    "orig_includes": [],
                    "merge_includes": true,
                    "use_matches": [],
                    "orig_matches": [
                        "https://learning.sit.kmutt.ac.th/"
                    ],
                    "merge_matches": true,
                    "use_excludes": [],
                    "orig_excludes": [],
                    "merge_excludes": true,
                    "use_connects": [],
                    "merge_connects": true,
                    "use_blockers": [],
                    "orig_run_at": "document-idle",
                    "orig_noframes": null,
                    "orig_connects": []
                }
            },
            "storage": {
                "ts": 1607192228244,
                "data": {}
            },
            "enabled": true,
            "position": 1,
            "file_url": "https://raw.githubusercontent.com/siraom15/Oliv-Speed-Up/main/Oliv-Speed-Up.user.js",
            "uuid": "e7cf8d0f-bd58-4da9-beb8-f524460f8e0b",
            "source": ""
        }
    ]
}